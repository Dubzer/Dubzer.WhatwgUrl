{
  DomUrl: [
    Boolean Equals(System.Object),
    Boolean TryCreate(System.String, Dubzer.WhatwgUrl.DomUrl ByRef),
    Boolean TryCreate(System.String, Dubzer.WhatwgUrl.DomUrl, Dubzer.WhatwgUrl.DomUrl ByRef),
    Boolean TryCreate(System.String, System.String, Dubzer.WhatwgUrl.DomUrl ByRef),
    Int32 GetHashCode(),
    System.String get_Hash(),
    System.String get_Host(),
    System.String get_Hostname(),
    System.String get_Href(),
    System.String get_Origin(),
    System.String get_Password(),
    System.String get_Pathname(),
    System.String get_Port(),
    System.String get_Protocol(),
    System.String get_Search(),
    System.String get_Username(),
    System.String Hash,
    System.String Host,
    System.String Hostname,
    System.String Href,
    System.String Origin,
    System.String Password,
    System.String Pathname,
    System.String Port,
    System.String Protocol,
    System.String Search,
    System.String ToString(),
    System.String Username,
    System.Type GetType(),
    Void .ctor(System.String, Dubzer.WhatwgUrl.DomUrl),
    Void .ctor(System.String, System.String)
  ],
  InvalidUrlException: [
    Boolean Equals(System.Object),
    Dubzer.WhatwgUrl.UrlErrorCode get_UrlError(),
    Dubzer.WhatwgUrl.UrlErrorCode UrlError,
    Int32 get_HResult(),
    Int32 GetHashCode(),
    Int32 HResult,
    System.Collections.IDictionary Data,
    System.Collections.IDictionary get_Data(),
    System.Exception get_InnerException(),
    System.Exception GetBaseException(),
    System.Exception InnerException,
    System.Reflection.MethodBase get_TargetSite(),
    System.Reflection.MethodBase TargetSite,
    System.String get_HelpLink(),
    System.String get_Message(),
    System.String get_Source(),
    System.String get_StackTrace(),
    System.String HelpLink,
    System.String Message,
    System.String Source,
    System.String StackTrace,
    System.String ToString(),
    System.Type GetType(),
    System.Type GetType(),
    Void GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext),
    Void set_HelpLink(System.String),
    Void set_HResult(Int32),
    Void set_Source(System.String)
  ],
  UrlErrorCode: [
    Boolean Equals(System.Object),
    Boolean HasFlag(System.Enum),
    Dubzer.WhatwgUrl.UrlErrorCode DomainInvalidCodePoint,
    Dubzer.WhatwgUrl.UrlErrorCode DomainToAscii,
    Dubzer.WhatwgUrl.UrlErrorCode DomainToUnicode,
    Dubzer.WhatwgUrl.UrlErrorCode FileInvalidWindowsDriveLetter,
    Dubzer.WhatwgUrl.UrlErrorCode FileInvalidWindowsDriveLetterHost,
    Dubzer.WhatwgUrl.UrlErrorCode HostInvalidCodePoint,
    Dubzer.WhatwgUrl.UrlErrorCode HostMissing,
    Dubzer.WhatwgUrl.UrlErrorCode InvalidCredentials,
    Dubzer.WhatwgUrl.UrlErrorCode InvalidReverseSolidus,
    Dubzer.WhatwgUrl.UrlErrorCode InvalidUrlUnit,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4EmptyPart,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4InIpv6InvalidCodePoint,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4InIpv6OutOfRangePart,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4InIpv6TooFewParts,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4InIpv6TooManyPieces,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4NonDecimalPart,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4NonNumericPart,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4OutOfRangePart,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv4TooManyParts,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6InvalidCodePoint,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6InvalidCompression,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6MultipleCompressions,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6TooFewPieces,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6TooManyPieces,
    Dubzer.WhatwgUrl.UrlErrorCode Ipv6Unclosed,
    Dubzer.WhatwgUrl.UrlErrorCode MissingSchemeNonRelativeUrl,
    Dubzer.WhatwgUrl.UrlErrorCode PortInvalid,
    Dubzer.WhatwgUrl.UrlErrorCode PortOutOfRange,
    Dubzer.WhatwgUrl.UrlErrorCode SpecialSchemeMissingFollowingSolidus,
    Dubzer.WhatwgUrl.UrlErrorCode Unknown,
    Int32 CompareTo(System.Object),
    Int32 GetHashCode(),
    Int32 value__,
    System.String ToString(),
    System.String ToString(System.IFormatProvider),
    System.String ToString(System.String, System.IFormatProvider),
    System.String ToString(System.String),
    System.Type GetType(),
    System.TypeCode GetTypeCode()
  ]
}